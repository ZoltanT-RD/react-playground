{"version":3,"sources":["assets/logo.svg","pages/defaultApp.js","components/caraousel3.js","pages/bootstrap.js","pages/SliderPage.js","pages/ParallaxExamplePage.js","serviceWorker.js","index.js"],"names":["module","exports","App","className","src","logo","alt","style","width","to","caraousel3","props","settings","dots","infinite","speed","slidesToShow","slidesToScroll","responsive","breakpoint","arrows","initialSlide","this","elements","map","e","React","Component","defaultProps","BootstrapPage","cardArray","color","fontSize","href","aria-current","role","aria-valuenow","aria-valuemin","aria-valuemax","type","textAlign","marginTop","SliderPage","ParallaxExamplePage","Boolean","window","location","hostname","match","routing","exact","path","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f5f0c9a1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport {\n    Link\n} from 'react-router-dom';\n\n\nimport logo from '../assets/logo.svg';\nimport './App.css';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                <p>\n                    Zoltan's awesome react playground\n                </p>\n<hr/>\n                <p>try the following pages:</p>\n                <ul style={{ width: \"400px\" }}>\n                    <li><Link to={\"/slider\"}>Slider</Link></li>\n                    <li><Link to={\"/bs\"}>Bootstrap comp.s</Link></li>\n                    <li><Link to={\"/para\"}>Parralax example</Link></li>\n                </ul>\n\n            </header>\n\n\n        </div>\n    );\n}\n\nexport default App;\n","import \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n\r\nimport \"./caraousel.scss\";\r\n\r\n// https://react-slick.neostack.com/docs/example/multiple-items\r\n\r\nimport React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport Slider from \"react-slick\";\r\n\r\nclass caraousel3 extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n\r\n    render() {\r\n        const settings = {\r\n            dots: false,\r\n            infinite: false,\r\n            speed: 500,\r\n            slidesToShow: 6,\r\n            slidesToScroll: 1,\r\n            responsive: [\r\n                {\r\n                    breakpoint: 768,\r\n                    settings: {\r\n                        arrows: false,\r\n                        slidesToShow: 5.5,\r\n                        slidesToScroll: 1,\r\n                        initialSlide: 1\r\n                    }\r\n                },\r\n                {\r\n                    breakpoint: 375,\r\n                    settings: {\r\n                        arrows: false,\r\n                        slidesToShow: 2.5,\r\n                        slidesToScroll: 1\r\n                    }\r\n                }\r\n            ]\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                <h2>final version slider</h2>\r\n                <Slider {...settings}>\r\n                    {this.props.elements.map((e) => (\r\n                        <div>{e}</div>\r\n                    ))}\r\n                </Slider>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\ncaraousel3.defaultProps = {\r\n    // id: \"TitleBar\"\r\n};\r\n\r\ncaraousel3.propTypes = {\r\n    id: PropTypes.string,\r\n    elements: PropTypes.arrayOf(PropTypes.element)\r\n};\r\n\r\nexport default caraousel3;","import React from 'react';\r\nimport logo from '../assets/logo.svg';\r\nimport css from './bootstrap.scss';\r\n\r\nimport Carausel from '../components/caraousel3';\r\n\r\n\r\nfunction BootstrapPage() {\r\n\r\n\r\n    const elements = [\r\n        <img src={\"https://placebear.com/200/300\"} className=\"kitten\" alt=\"kittens\" />,\r\n        <img src={\"https://placebear.com/g/200/300\"} className=\"kitten\" alt=\"kittens\" />,\r\n        <img src={\"https://placebear.com/200/300\"} className=\"kitten\" alt=\"kittens\" />,\r\n        <img src={\"https://placebear.com/g/200/300\"} className=\"kitten\" alt=\"kittens\" />,\r\n        <img src={\"https://placebear.com/200/300\"} className=\"kitten\" alt=\"kittens\" />,\r\n        <img src={\"https://placebear.com/g/200/300\"} className=\"kitten\" alt=\"kittens\" />,\r\n        <img src={\"https://placebear.com/200/300\"} className=\"kitten\" alt=\"kittens\" />,\r\n        <img src={\"https://placebear.com/g/200/300\"} className=\"kitten\" alt=\"kittens\" />\r\n    ];\r\n\r\n    const cardArray=[\r\n        <div className=\"card\" style={{ width: \"18rem\", color: \"black\" }}>\r\n            <img src=\"https://placekitten.com/200/300\" className=\"card-img-top\" alt=\"image\" />\r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-title\">Card title</h5>\r\n                <p className=\"card-text\" style={{ fontSize: \"14px\" }}>Some quick example text to build on the card title and make up the bulk of the card's content.</p>\r\n                <a href=\"#\" className=\"btn btn-primary\">Go somewhere</a>\r\n            </div>\r\n        </div>,\r\n        <div className=\"card\" style={{ width: \"18rem\", color: \"black\" }}>\r\n            <img src=\"https://placekitten.com/g/200/300\" className=\"card-img-top\" alt=\"image\" />\r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-title\">Card title</h5>\r\n                <p className=\"card-text\" style={{ fontSize: \"14px\" }}>Some quick example text to build on the card title and make up the bulk of the card's content.</p>\r\n                <a href=\"#\" className=\"btn btn-primary\">Go somewhere</a>\r\n            </div>\r\n        </div>,\r\n        <div className=\"card\" style={{ width: \"18rem\", color: \"black\" }}>\r\n            <img src=\"https://placekitten.com/200/300\" className=\"card-img-top\" alt=\"image\" />\r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-title\">Card title</h5>\r\n                <p className=\"card-text\" style={{ fontSize: \"14px\" }}>Some quick example text to build on the card title and make up the bulk of the card's content.</p>\r\n                <a href=\"#\" className=\"btn btn-primary\">Go somewhere</a>\r\n            </div>\r\n        </div>,\r\n        <div className=\"card\" style={{ width: \"18rem\", color: \"black\" }}>\r\n            <img src=\"https://placekitten.com/g/200/300\" className=\"card-img-top\" alt=\"image\" />\r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-title\">Card title</h5>\r\n                <p className=\"card-text\" style={{ fontSize: \"14px\" }}>Some quick example text to build on the card title and make up the bulk of the card's content.</p>\r\n                <a href=\"#\" className=\"btn btn-primary\">Go somewhere</a>\r\n            </div>\r\n        </div>,\r\n        <div className=\"card\" style={{ width: \"18rem\", color: \"black\" }}>\r\n            <img src=\"https://placekitten.com/200/300\" className=\"card-img-top\" alt=\"image\" />\r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-title\">Card title</h5>\r\n                <p className=\"card-text\" style={{ fontSize: \"14px\" }}>Some quick example text to build on the card title and make up the bulk of the card's content.</p>\r\n                <a href=\"#\" className=\"btn btn-primary\">Go somewhere</a>\r\n            </div>\r\n        </div>\r\n\r\n    ];\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"container bootstrap\">\r\n                <nav className=\"navbar sticky-top navbar-light bg-light\">\r\n                    <a className=\"navbar-brand\" href=\"#\">Sticky top</a>\r\n                </nav>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"bootstrap-header col-md-10 offset-md-1 col-sm-12\">\r\n                        <img src={\"https://placekitten.com/200/300\"} className=\"kitten\" alt=\"kittens\" />\r\n                        <h1>Zoltan's awesome react & bootstrap playground</h1>\r\n                        <hr />\r\n\r\n                        <p>the built in BS carausel is rubbish... use this; https://kenwheeler.github.io/slick/ | https://www.npmjs.com/package/slick-carousel</p>\r\n\r\n\r\n                        <ol className=\"breadcrumb\">\r\n                            <li className=\"breadcrumb-item\"><a href=\"#\">Home</a></li>\r\n                            <li className=\"breadcrumb-item\"><a href=\"#\">Library</a></li>\r\n                            <li className=\"breadcrumb-item active\" aria-current=\"page\">Data</li>\r\n                        </ol>\r\n\r\n                        <div className=\"progress\">\r\n                            <div className=\"progress-bar bg-warning\" role=\"progressbar\" aria-valuenow=\"75\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n                        </div>\r\n                        <h3>these are BS buttons, with overwritten colors</h3>\r\n                        <button type=\"button\" className=\"btn btn-primary\">Primary</button>\r\n                        <button type=\"button\" className=\"btn btn-secondary\">Secondary</button>\r\n                        <button type=\"button\" className=\"btn btn-success\">Success</button>\r\n                        <button type=\"button\" className=\"btn btn-danger\">Danger</button>\r\n                        <button type=\"button\" className=\"btn btn-warning\">Warning</button>\r\n                        <button type=\"button\" className=\"btn btn-info\">Info</button>\r\n                        <button type=\"button\" className=\"btn btn-light\">Light</button>\r\n                        <button type=\"button\" className=\"btn btn-dark\">Dark</button>\r\n\r\n                        <h3>I'm a BS list</h3>\r\n                        <ul className=\"list-group\">\r\n                            <li className=\"list-group-item active\">Cras justo odio</li>\r\n                            <li className=\"list-group-item\">Dapibus ac facilisis in</li>\r\n                            <li className=\"list-group-item\">Morbi leo risus</li>\r\n                            <li className=\"list-group-item\">Porta ac consectetur ac</li>\r\n                            <li className=\"list-group-item\">Vestibulum at eros</li>\r\n                        </ul>\r\n\r\n                        <h3>this is an example BS Card</h3>\r\n                        <div className=\"card\" style={{width: \"18rem\", color: \"black\"}}>\r\n                            <img src=\"https://miro.medium.com/max/1200/1*mk1-6aYaf_Bes1E3Imhc0A.jpeg\" className=\"card-img-top\" alt=\"image\" />\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">Card title</h5>\r\n                                <p className=\"card-text\" style={{ fontSize: \"14px\"}}>Some quick example text to build on the card title and make up the bulk of the card's content.</p>\r\n                                <a href=\"#\" className=\"btn btn-primary\">Go somewhere</a>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                </div>\r\n\r\n                <h2 style={{ textAlign: \"center\", marginTop: \"40px\" }}>Bear slider!</h2>\r\n                <div className=\"slider\">\r\n                    <Carausel elements={elements} />\r\n                </div>\r\n\r\n                <h2 style={{ textAlign: \"center\", marginTop: \"40px\" }}>BS Card slider</h2>\r\n                <div className=\"slider\">\r\n                    <Carausel elements={cardArray} />\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default BootstrapPage;\r\n","import React from 'react';\r\nimport Cara from '../components/caraousel3';\r\n\r\nfunction SliderPage() {\r\n\r\n    const elements= [\r\n        <img src={\"https://placekitten.com/200/300\"} className=\"kitten\" alt=\"kittens\" />,\r\n        <img src={\"https://placekitten.com/g/200/300\"} className=\"kitten\" alt=\"kittens\" />,\r\n        <img src={\"https://placekitten.com/200/300\"} className=\"kitten\" alt=\"kittens\" />,\r\n        <img src={\"https://placekitten.com/g/200/300\"} className=\"kitten\" alt=\"kittens\" />,\r\n        <img src={\"https://placekitten.com/200/300\"} className=\"kitten\" alt=\"kittens\" />,\r\n        <img src={\"https://placekitten.com/g/200/300\"} className=\"kitten\" alt=\"kittens\" />,\r\n        <img src={\"https://placekitten.com/200/300\"} className=\"kitten\" alt=\"kittens\" />,\r\n        <img src={\"https://placekitten.com/g/200/300\"} className=\"kitten\" alt=\"kittens\" />\r\n    ]\r\n    return (\r\n        <div className=\"slider\">\r\n            <Cara elements={elements} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SliderPage;\r\n","import React from 'react';\r\n\r\n\r\nfunction ParallaxExamplePage() {\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"container bootstrap\">\r\n                <nav className=\"navbar sticky-top navbar-light bg-light\">\r\n                    <a className=\"navbar-brand\" href=\"#\">Sticky top</a>\r\n                </nav>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"bootstrap-header col-md-10 offset-md-1 col-sm-12\">\r\n\r\n                        <ol className=\"breadcrumb\">\r\n                            <li className=\"breadcrumb-item\"><a href=\"#\">Home</a></li>\r\n                            <li className=\"breadcrumb-item\"><a href=\"#\">Library</a></li>\r\n                            <li className=\"breadcrumb-item active\" aria-current=\"page\">Data</li>\r\n                        </ol>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ParallaxExamplePage;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Redirect\n} from 'react-router-dom';\n\n\nimport './index.css';\nimport DefaultAppPage from './pages/defaultApp';\nimport BootstrapPage from './pages/bootstrap';\nimport SliderPage from './pages/SliderPage';\nimport ParallaxExamplePage from './pages/ParallaxExamplePage';\n\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap';\nimport scss from './global.scss'\n\n\n\nconst routing = (\n    <Router>\n        <Switch>\n            <Route exact path=\"/bs\">\n                <BootstrapPage/>\n            </Route>\n            <Route exact path=\"/slider\">\n                <SliderPage />\n            </Route>\n            <Route exact path=\"/para\">\n                <ParallaxExamplePage />\n            </Route>\n\n            <Route exact path=\"/\">\n                <DefaultAppPage />\n            </Route>\n        </Switch>\n    </Router>\n);\n\nReactDOM.render(\n    routing,\n    document.getElementById(\"root\")\n);\n\n/*\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n*/\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}